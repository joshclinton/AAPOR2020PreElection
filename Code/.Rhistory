mean(dat$DemError[dat$SenGubElection20==TRUE], na.rm=TRUE)
sum(table(dat$RepError[dat$SenGubElection20==TRUE]))
# Table 4
mean(dat$CorrectWinner)
mean(dat$poll.predicted)
mean(dat$poll.predicted[dat$SenGubElection20==TRUE],na.rm=TRUE)
# Correct Prediction
dat$PollMargin20 <- abs(dat$Biden - dat$Trump)
dat$Margin20 <- abs(dat$DemCertVote - dat$RepCertVote)
mean(dat$poll.predicted,na.rm=TRUE)
length(dat$poll.predicted)
sum(!is.na(dat$MoE))
sum(!is.na(dat$MoE))/nrow(dat)
# AMong online polls -- are they included? Yes.
sum(!is.na(dat$MoE[dat$Mode=="Online"]))/sum(as.logical(dat$Mode=="Online"))
mean(dat$MoE,na.rm=TRUE)
mean(abs(dat$RepError) > dat$MoE,na.rm=TRUE)
mean(abs(dat$DemError) > dat$MoE,na.rm=TRUE)
1-mean(abs(dat$RepNormError) > dat$MoE,na.rm=TRUE)
1-mean(abs(dat$DemNormError) > dat$MoE,na.rm=TRUE)
mean(dat$poll.predicted[dat$PollMargin20 > dat$MoE],na.rm=TRUE)
length(dat$poll.predicted[dat$PollMargin20 > dat$MoE])
mean(dat$poll.predicted[dat$Margin20 > dat$MoE],na.rm=TRUE)
length(dat$poll.predicted[dat$Margin20 > dat$MoE])
mean(dat$poll.predicted[dat$PollMargin20 > 2*dat$MoE],na.rm=TRUE)
length(dat$poll.predicted[dat$PollMargin20 > 2*dat$MoE])
mean(dat$poll.predicted[dat$Margin20 > 2*dat$MoE],na.rm=TRUE)
length(dat$poll.predicted[dat$Margin20 > 2*dat$MoE])
mean(dat$SignedError[dat$PollMargin20 > 2*dat$MoE],na.rm=TRUE)
mean(dat$AbsError[dat$PollMargin20 > 2*dat$MoE],na.rm=TRUE)
# Correct Prediction
mean(dat$poll.predicted[dat$SenGubElection20==1],na.rm=TRUE)
table(dat$SenGubElection20==1)
mean(dat$poll.predicted[dat$SenGubElection20==TRUE & dat$PollMargin20 > dat$MoE],na.rm=TRUE)
table(dat$SenGubElection20==TRUE & dat$PollMargin20 > dat$MoE)
mean(dat$poll.predicted[dat$SenGubElection20==TRUE & dat$Margin20 > dat$MoE],na.rm=TRUE)
table(dat$SenGubElection20==TRUE & dat$Margin20 > dat$MoE)
mean(dat$poll.predicted[dat$SenGubElection20==TRUE & dat$PollMargin20 > 2*dat$MoE],na.rm=TRUE)
table(dat$SenGubElection20==TRUE & dat$PollMargin20 > 2*dat$MoE)
mean(dat$poll.predicted[dat$SenGubElection20==TRUE & dat$Margin20 > 2*dat$MoE],na.rm=TRUE)
table(dat$SenGubElection20==TRUE & dat$Margin20 > 2*dat$MoE)
nrow(dat)
mean(dat$DK,na.rm=TRUE)
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig1B_PresidentialStatePollsDKEffect.png",width=700,height=700)
par(mfrow=c(2,1))
hist(dat$SignedError[dat$DK>5],main = "Distribution of Signed Errors if 5%+ Choose Other",xlab="",breaks=seq(-15,30))
abline(v=mean(dat$SignedError[dat$DK>5]),lwd=2)
hist(dat$SignedError[dat$DK<=5],main = "Distribution of Signed Errors if <= 5% Choose Other",xlab="",breaks=seq(-15,30))
abline(v=mean(dat$SignedError[dat$DK<=5]),lwd=2)
dev.off()
############################################################################################
##    Last week only
############################################################################################
dat2 <- subset(dat,dat$DaysToElection >= -7)
mean(dat2$DK,na.rm=TRUE)
nrow(dat2[dat2$StateType=="Competitive",])
length(table(dat2$Conducted[dat2$StateType=="Competitive"]))
# Table 1
mean(dat2$SignedError,na.rm=TRUE)
mean(dat2$AbsError,na.rm=TRUE)
# Table 3
mean(dat2$RepError, na.rm=TRUE)
mean(dat2$DemError, na.rm=TRUE)
mean(dat2$RepError[dat2$SenGubElection20==TRUE], na.rm=TRUE)
mean(dat2$DemError[dat2$SenGubElection20==TRUE], na.rm=TRUE)
sum(table(dat2$RepError[dat2$SenGubElection20==TRUE]))
# Table 4
mean(dat2$CorrectWinner)
mean(dat2$poll.predicted)
mean(dat2$poll.predicted[dat2$SenGubElection20==TRUE],na.rm=TRUE)
mean(dat2$poll.predicted[dat2$AbsPollMargin>=1])
mean(dat2$poll.predicted[dat2$AbsPollMargin>=5])
nrow(dat2)
length(table(dat2$Conducted))
dat3 <- subset(dat2,dat2$DaysToElection >= -3)
nrow(dat3)
length(table(dat3$Conducted))
mean(dat3$DK,na.rm=TRUE)
############################################################################################
##    Last 3 Days
############################################################################################
dat3 <- subset(dat,dat$DaysToElection >= -3)
mean(dat3$SignedError,na.rm=TRUE)
mean(dat3$AbsError,na.rm=TRUE)
nrow(dat3[dat3$StateType=="Competitive",])
length(table(dat3$Conducted[dat3$StateType=="Competitive"]))
# Summarize all state-level Presidential Polls
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig4_PresidentialStatePollsSummaryPooled.png",width=800,height=900)
par(mfrow=c(3,2))
hist(dat$SignedError,main="Last Two Weeks",xlab="Signed Error on Margin",xlim=c(-20,20),breaks=seq(-21,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=mean(dat$SignedError))
abline(v=0,lwd=2)
text(-10,40,"Margin Too \n Republican",cex=2)
text(10,40,"Margin Too \n Democratic",cex=2)
hist(dat$AbsError,xlab="Absolute Error on Margin",main="Last Two Weeks",xlim=c(0,20),breaks=seq(0,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=mean(dat$AbsError))
hist(dat2$SignedError,main="Last Week",xlab="Signed Error on Margin",xlim=c(-20,20),breaks=seq(-21,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=0,lwd=2)
abline(v=mean(dat2$SignedError))
text(-10,40,"Margin Too \n Republican",cex=2)
text(10,40,"Margin Too \n Democratic",cex=2)
hist(dat2$AbsError,xlab="Absolute Error on Margin",main="Last Two Weeks",xlim=c(0,20),breaks=seq(0,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=mean(dat2$AbsError))
hist(dat3$SignedError,main="Last 3 Days",xlab="Signed Error on Margin",xlim=c(-20,20),breaks=seq(-21,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=0,lwd=2)
abline(v=mean(dat3$SignedError))
text(-10,30,"Margin Too \n Republican",cex=2)
text(10,30,"Margin Too \n Democratic",cex=2)
hist(dat3$AbsError,xlab="Absolute Error on Margin",main="Last 3 Days",xlim=c(0,20),breaks=seq(0,21,by=2),cex.lab=1.5,cex.main=2)
abline(v=mean(dat3$AbsError))
dev.off()
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/MarginOfErrorInadequate.png",width=600, height=480)
hist(dat$AbsError,main="Absolute Error: \n State Level Presidential Polls in Last Two Weeks",cex.main=2,
xlab="Absolute Error on the Margin",breaks=seq(0,20))
abline(v=mean(dat$MoE,na.rm=TRUE),lwd=4,lty=2)
abline(v=mean(2*dat$MoE,na.rm=TRUE),lwd=4,lty=2)
text(mean(dat$MoE,na.rm=TRUE)-2,50,"Avg. Margin \n of Error")
text(mean(2*dat$MoE,na.rm=TRUE)+3,50,"2 x Avg. Margin \n of Error")
dev.off()
table(dat$Mode)
dat$Mode[dat$Mode=="IVR"] <- "NA"
dat$Mode[dat$Mode=="IVR/Text"] <- "Mixed"
dat$Mode[dat$Mode=="Online/Text"] <- "Mixed"
dat$Mode[dat$Mode=="Phone - unknown"] <- "NA"
table(dat$Mode)
# Look at unknown phone polls
dat.unknown <- dat[dat$Mode=="Phone - unknown",]
dat.misc <- dat[dat$Mode=="Misc.",]
# Figure 1
100*prop.table(table(dat$Mode))
100*prop.table(table(dat$Mode[dat$StateType=="Competitive"]))
table(dat$Mode)
# TABLE 5
tapply(dat$SignedError,dat$Mode,mean)
tapply(dat$AbsError,dat$Mode,mean)
tapply(dat$SignedError,dat$Mode,median)
tapply(dat$AbsError,dat$Mode,median)
summary(lm(dat$SignedError~as.factor(dat$Mode)+dat$Margin16-1))
summary(lm(dat$AbsError~as.factor(dat$Mode)+dat$Margin16-1))
# Renormalized
tapply(dat$SignedErrorNorm,dat$Mode,mean)
tapply(dat$AbsErrorNorm,dat$Mode,mean)
tapply(dat$poll.predicted,dat$Mode,mean)
table(dat$Mode)
# Competitive States
tapply(dat$SignedErrorNorm[dat$StateType=="Competitive"],dat$Mode[dat$StateType=="Competitive"],mean)
tapply(dat$AbsErrorNorm[dat$StateType=="Competitive"],dat$Mode[dat$StateType=="Competitive"],mean)
table(dat$Mode[dat$StateType=="Competitive"])
tapply(dat$CorrectWinner[dat$StateType=="Competitive"],dat$Mode[dat$StateType=="Competitive"],mean)
dat$Mode[dat$Mode=="NA"] <- "Misc."
dat$Mode[dat$Mode=="Mixed"] <- "Misc."
######################################################################################
##        Error by Collapsed Mode: Alternative Recoding with Mixed category
######################################################################################
dat$ModeRecode2 <- NA
dat$ModeRecode2[dat$Mode=="Live phone - RDD"] <- "Phone"
dat$ModeRecode2[dat$Mode=="Live phone - RBS"] <- "Phone"
dat$ModeRecode2[dat$Mode=="Phone - uknown"] <- NA
dat$ModeRecode2[dat$Mode=="Online"] <- "Online"
dat$ModeRecode2[dat$Mode=="Online/Text"] <- "Mixed"
dat$ModeRecode2[dat$Mode=="Online/Phone"] <- "Mixed"
dat$ModeRecode2[dat$Mode=="Phone/Online"] <- "Mixed"
dat$ModeRecode2[dat$Mode=="IVR/Live Phone"] <- "Mixed"
dat$ModeRecode2[dat$Mode=="IVR/Text"] <- "Mixed"
dat$ModeRecode2[dat$Mode=="IVR/Online"] <- "Mixed"
dat.nomisc <- dat[-seq(1,nrow(dat))*as.logical(dat$Mode=="Misc."), ]
table(dat$ModeRecode2)
tapply(dat$SignedError,dat$ModeRecode2,mean)
tapply(dat$AbsError,dat$ModeRecode2,mean)
tapply(dat$CorrectWinner,dat$ModeRecode2,mean)
table(dat$ModeRecode2)
tapply(dat.nomisc$SignedError,dat.nomisc$ModeRecode2,mean)
tapply(dat.nomisc$AbsError,dat.nomisc$ModeRecode2,mean)
summary(lm(dat$AbsError~as.factor(dat$ModeRecode2)+as.factor(dat$StateType)+dat$Margin16))
dat$PredTrumpWin <- dat$Trump > dat$Biden
dat$TrumpWin <- dat$RepCertVote > dat$DemCertVote
tapply(dat$PredTrumpWin,dat$ModeRecode2,mean)
tapply(dat$TrumpWin,dat$ModeRecode2,mean)
table(Pred=dat$PredTrumpWin[dat$ModeRecode2=="Mixed"],Act=dat$TrumpWin[dat$ModeRecode2=="Mixed"])
table(Pred=dat$PredTrumpWin[dat$ModeRecode2=="Online"],Act=dat$TrumpWin[dat$ModeRecode2=="Online"])
table(Pred=dat$PredTrumpWin[dat$ModeRecode2=="Phone"],Act=dat$TrumpWin[dat$ModeRecode2=="Phone"])
mean(dat$SignedError,na.rm=TRUE)
mean(dat$AbsError,na.rm=TRUE)
mean(dat$CorrectWinner)
nrow(dat)
nrow(dat)
nrow(dat.nomisc)
par(mfrow=c(2,1))
boxplot(dat.nomisc$AbsError~dat.nomisc$Mode,ylim=c(0,20),ylab="(Biden Poll - Trump Poll) - (Biden Vote - Trump Vote)",xlab="",
main="Absolute Error by Mode in State Presidential Polls: \n Last Two Weeks")
text(seq(1,6),rep(0,times=6),
round(tapply(dat.nomisc$AbsError,dat.nomisc$Mode,mean),digits=1),cex=1.5)
abline(h=0,lty=2)
boxplot(dat.nomisc$SignedError~dat.nomisc$Mode,ylim=c(-10,20),ylab="(Biden Poll - Trump Poll) - (Biden Vote - Trump Vote)",xlab="",
main="Signed Error by Mode in State Presidential Polls: \n Last Two Weeks")
text(seq(1,6),rep(-10,times=6),
round(tapply(dat.nomisc$SignedError,dat.nomisc$Mode,mean),digits=1),cex=1.5)
abline(h=0,lty=2)
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig6_AbsSignedErrorByModeStatePresVote.png",width=1000, height=900)
par(mfrow=c(2,1))
boxplot(dat.nomisc$AbsError~dat.nomisc$Mode,ylim=c(0,20),ylab="(Biden Poll - Trump Poll) - (Biden Vote - Trump Vote)",xlab="",
main="Absolute Error by Mode in State Presidential Polls: \n Last Two Weeks",cex.main=2)
text(seq(1,6),rep(0,times=6),
round(tapply(dat.nomisc$AbsError,dat.nomisc$Mode,mean),digits=1),cex=1.5)
abline(h=0,lty=2)
boxplot(dat.nomisc$SignedError~dat.nomisc$Mode,ylim=c(-10,20),ylab="(Biden Poll - Trump Poll) - (Biden Vote - Trump Vote)",xlab="",
main="Signed Error by Mode in State Presidential Polls: \n Last Two Weeks",cex.main=2)
text(seq(1,6),rep(-10,times=6),
round(tapply(dat.nomisc$SignedError,dat.nomisc$Mode,mean),digits=1),cex=1.5)
abline(h=0,lty=2)
dev.off()
# Number of Polls
dat$Constant <- 1
tapply(dat$Constant,dat$Geography,sum)
tapply(dat$DemError,dat$Geography,mean)
tapply(dat$RepError,dat$Geography,mean)
# Average Signed Error by State
tapply(dat$SignedError,dat$Geography,mean)
# Average State Error
mean(tapply(dat$SignedError,dat$Geography,mean))
######################################################################################
#     Plot State Error
#     Unit of observation is a state
######################################################################################
stateSignedError<-tapply(dat$SignedError,dat$Geography,mean)
stateRepError<-tapply(dat$RepError,dat$Geography,mean)
stateRepVote<-tapply(dat$RepVote,dat$Geography,mean)
stateTrump16<-tapply(dat$Trump16,dat$Geography,mean)
# Figure 9
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig8_SignedErrorByVoteByState.png",width=600,height=600)
par(mfrow=c(1,1))
plot(stateRepVote,stateSignedError,type="n",ylab="Average Signed Error",xlab="2016 Trump Certified Vote",
main="Avg. Signed Error by 2016 Trump Vote: \n Last 2 Weeks",cex.main=2)
axis(1)
axis(2)
text(stateRepVote,stateSignedError,names(stateRepError))
abline(lm(stateSignedError~stateRepVote))
abline(h=0,lty=2)
dev.off()
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig8_SignedErrorByVoteByState.png",width=600,height=600)
par(mfrow=c(1,1))
plot(stateRepVote,stateSignedError,type="n",ylab="Average Signed Error",xlab="2016 Trump Certified Vote",
main="Avg. Signed Error by 2016 Trump Vote: \n Last 2 Weeks",cex.main=2,cex.lab=1.5)
axis(1)
axis(2)
text(stateRepVote,stateSignedError,names(stateRepError))
abline(lm(stateSignedError~stateRepVote))
abline(h=0,lty=2)
dev.off()
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig9_SignedErrorByState.png",width=1000,height=600)
plot(c(1,length(state.postal)),c(-10,15),type="n",main="Avg. Signed Error by State: \n Last Two Weeks",axes=FALSE,xlab="",ylab="Signed Error",cex.main=2)
axis(2)
for(i in 1:length(state.postal)){
state.dat <- subset(dat,dat$Geography==state.postal[i])
for(j in 1:nrow(state.dat)){
points(i,jitter(state.dat$SignedError[j]),pch=18,col="GREY")
}
points(i,state.error[i],pch=1,cex=3)
text(i,state.error[i],round(state.error[i]),digits=2,cex=.9)
text(i,-10,state.postal[i],cex=.5)
}
abline(h=0,lty=2)
text(25,8,"Poll Margin Favors Biden",cex=1.5)
text(25,-8,"Poll Margin Favors Trump",cex=1.5)
dev.off()
state.error <- tapply(dat$AbsError,dat$Geography,mean)
state.error.indx <- sort(state.error,index.return=TRUE)
state.error <- state.error[state.error.indx$ix]
state.postal <- names(state.error)
absolute.state.error <- state.error
# Figure 10
png(file="~/Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig10_AbsErrorByState.png",width=1000,height=600)
plot(c(1,length(state.postal)),c(0,15),type="n",main="Avg. Absolute Error by State: \n Last Two Weeks",axes=FALSE,xlab="",ylab="Signed Error",cex.main=2)
axis(2)
for(i in 1:length(state.postal)){
state.dat <- subset(dat,dat$Geography==state.postal[i])
for(j in 1:nrow(state.dat)){
points(i,jitter(state.dat$AbsError[j]),pch=18,col="GREY")
}
points(i,state.error[i],pch=1,cex=3)
text(i,state.error[i],round(state.error[i]),digits=2,cex=.9)
text(i,0,state.postal[i],cex=.5)
}
dev.off()
mean(state.error)
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNV.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNC.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFilePA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileKS.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileFL.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileAZ.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileWI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileIA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
# New Voters
sum(ChangeAZ[6,])/sum(ChangeAZ)
ChangePA[6,]/sum(ChangeAZ[6,])
sum(ChangeGA[6,])/sum(ChangeGA)
ChangeGA[6,]/sum(ChangeGA[6,])
png(file="Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig16_SienaAdjustmentsTrump2016.png",
width=600, height=800)
plot(as.numeric(tb.trump16.MI)[c(1,2,6)],c(1,2,3),axes=FALSE,ylab="",cex.main=2,cex.lab=1.5,
xlab="Difference in Reweighted %",
main="Effect of Reweighting to the Mode and Share by Strata: \n 2016 Self-Reported Vote",
xlim=c(-.1,.05),ylim=c(1,4),type="n")
polygon(c(-.2,.2,.2,-.2),c(1,1,2,2),col="grey81",border=NA)
polygon(c(-.2,.2,.2,-.2),c(3,3,4,4),col="grey81",border=NA)
axis(1)
abline(v=seq(-.04,.04,by=.01),lty=2,col="Grey")
abline(v=0,col="Grey")
text(as.numeric(tb.trump16.GA)[c(1,2,6)],seq(1.05,3.05),c("GA","GA","GA"),cex=.75)
text(as.numeric(tb.trump16.NV)[c(1,2,6)],seq(1.1,3.1),c("NV","NV","NV"),cex=.75)
text(as.numeric(tb.trump16.NC)[c(1,2,6)],seq(1.2,3.2),c("NC","NC","NC"),cex=.75)
text(as.numeric(tb.trump16.MI)[c(1,2,6)],seq(1.3,3.3),c("MI","MI","MI"),cex=.75)
text(as.numeric(tb.trump16.PA)[c(1,2,6)],seq(1.4,3.4),c("PA","PA","PA"),cex=.75)
text(as.numeric(tb.trump16.KS)[c(1,2,6)],seq(1.5,3.5),c("KS","KS","KS"),cex=.75)
text(as.numeric(tb.trump16.FL)[c(1,2,6)],seq(1.6,3.6),c("FL","FL","FL"),cex=.75)
text(as.numeric(tb.trump16.AZ)[c(1,2,6)],seq(1.7,3.7),c("AZ","AZ","AZ"),cex=.75)
text(as.numeric(tb.trump16.WI)[c(1,2,6)],seq(1.8,3.8),c("WI","WI","WI"),cex=.75)
text(as.numeric(tb.trump16.IA)[c(1,2,6)],seq(1.88,3.88),c("IA","IA","IA"),cex=.75)
text(as.numeric(tb.trump16.MT)[c(1,2,6)],seq(1.95,3.95),c("MT","MT","MT"),cex=.75)
text(-.1,1.5,"Trump 2016 Vote",pos=4,cex=1.5)
text(-.1,2.5,"Clinton 2016 Vote",pos=4,cex=1.5)
text(-.1,3.5,"No 2016 Vote",pos=4,cex=1.5)
dev.off()
TrumpStrata.PA
BidenStrata.PA
TrumpStrata.MT
BidenStrata.MT
png(file="Google Drive/AAPOR.PreElectionPolling/Writing/Figures/Fig15_SienaAdjustmentsStrataTrump2020.png",
width=600, height=800)
plot(as.numeric(TrumpStrata.PA),seq(1,5),axes=FALSE,ylab="",cex.main=2,cex.lab=1.5,
xlab="Difference in Reweighted %",
main="Effect of Reweighting to the Mode and Share by Strata: \n 2020 Trump Vote",
xlim=c(-.1,.05),ylim=c(1,6),type="n")
polygon(c(-.2,.2,.2,-.2),c(1,1,2,2),col="grey81",border=NA)
polygon(c(-.2,.2,.2,-.2),c(3,3,4,4),col="grey81",border=NA)
polygon(c(-.2,.2,.2,-.2),c(5,5,6,6),col="grey81",border=NA)
axis(1)
abline(v=seq(-.04,.04,by=.01),lty=2,col="Grey")
abline(v=0,col="Grey")
text(TrumpStrata.FL,seq(1.1,5.1),c("FL","FL","FL","FL","FL"),cex=.75)
text(TrumpStrata.GA,seq(1.2,5.2),c("GA","GA","GA","GA","GA"),cex=.75)
text(TrumpStrata.IA,seq(1.3,5.3),c("IA","IA","IA","IA","IA"),cex=.75)
text(TrumpStrata.KS,seq(1.4,5.4),c("KS","KS","KS","KS","KS"),cex=.75)
text(TrumpStrata.MI,seq(1.5,5.5),c("MI","MI","MI","MI","MI"),cex=.75)
text(TrumpStrata.MT,seq(1.6,5.6),c("MT","MT","MT","MT","MT"),cex=.75)
text(TrumpStrata.NC,seq(1.7,5.7),c("NC","NC","NC","NC","NC"),cex=.75)
text(TrumpStrata.PA,seq(1.8,5.8),c("PA","PA","PA","PA","PA"),cex=.75)
text(TrumpStrata.WI,seq(1.9,5.9),c("WI","WI","WI","WI","WI"),cex=.75)
text(-.1,1.5,"Solid Democrat",pos=4,cex=1.5)
text(-.1,2.5,"Lean Democrat",pos=4,cex=1.5)
text(-.1,3.5,"Toss Up",pos=4,cex=1.5)
text(-.1,4.5,"Lean Republican",pos=4,cex=1.5)
text(-.1,5.5,"Solid Republican",pos=4,cex=1.5)
dev.off()
ChangeNC
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNV.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNC.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFilePA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileKS.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileFL.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileAZ.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileWI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileIA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
# New Voters
sum(ChangeAZ[6,])/sum(ChangeAZ)
ChangePA[6,]/sum(ChangeAZ[6,])
sum(ChangeGA[6,])/sum(ChangeGA)
ChangeGA[6,]/sum(ChangeGA[6,])
getwd()
setwd("~/Google Drive/AAPOR.PreElectionPolling/Code")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNV.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNC.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFilePA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileKS.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileFL.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileAZ.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileWI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileIA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNV.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNC.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFilePA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileKS.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileFL.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileAZ.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileWI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileIA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
# New Voters
sum(ChangeAZ[6,])/sum(ChangeAZ)
ChangePA[6,]/sum(ChangeAZ[6,])
sum(ChangeGA[6,])/sum(ChangeGA)
ChangeGA[6,]/sum(ChangeGA[6,])
getwd()
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/PlotSienaPollsTogether.R')
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileGA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNV.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileNC.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFilePA.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileKS.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileFL.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileAZ.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileWI.R")
source(file="Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileIA.R")
source('~/Google Drive/AAPOR.PreElectionPolling/Code/AdjustSienaPollsToVoterFileMT.R')
#########################################################################
#########################################################################
# AAPOR Task Force on 2020 Pre-Election Polls:
# Performance of State Presidential Polls
# Josh Clinton
# Vanderbilt University
#########################################################################
#########################################################################
library(miceadds)
library(stargazer)
library(stringr)
library(plyr)
library(tidyverse)
library(ggplot2)
library(gplots)
library(ggpubr)
library(readxl)
######################################################################################
##  Overall assessment: all polls
######################################################################################
# Get from the AnalyzeStateSenGubPolls.R
# state.with.sengub
# This identifies states with a senate or gubernatorial election for comparing similar states across race types
sengub <- as.data.frame(cbind(state.with.sengub,rep(1,times = length(state.with.sengub))))
colnames(sengub) <- c("State","SenGubElection20")
sengub$SenGubElection20 <- as.numeric(sengub$SenGubElection20)
# Merge in 2016 vote data from AAPOR 2016 (note that Arkansas had wrong postal code in 2016 and was corrected in 2020)
dat16 <- election2016 <- read.csv("~/Google Drive/AAPOR.PreElectionPolling/Historical Polls Original/Original Data/AAPOR2016-PresidentialGeneralPollData/election2016.csv")
dat16 <- merge(dat16,sengub, by = "State", all = TRUE)
dat16$Clinton16 <- dat16$Clinton*100
dat16$Trump16 <- dat16$Trump*100
dat16$Geography <- dat16$State
dat16$TrumpWin16 <- dat16$TrumpWin
dat16$Margin16 <- dat16$Trump16 - dat16$Clinton16
dat16 <- dat16[,-c(1,2,3,4,5,6)]  # Drop extraneous columns
# Read in Polling Data for 2020
dat <- read_excel("~/Google Drive/AAPOR.PreElectionPolling/2020 General Election Polling Data/GenPresPolling.xlsx", sheet = "StatePolls")
dat <- merge(dat,dat16, by = "Geography", all = TRUE)
# Create DaysToElection variable - last day of field period to Election Day
dat$EndDate <- as.Date(dat$EndDate, "%m/%d/%Y")
dat$StartDate <- as.Date(dat$StartDate, "%m/%d/%Y")
election.day <- as.Date("11/3/2020", "%m/%d/%Y")
dat$DaysToElection <-  dat$EndDate - election.day
dat$DaysToElection <- as.numeric(dat$DaysToElection)
# Recode missing data in any cells
dat[dat == -99] <- NA
# Classify State Type based on 2016 margin
dat$StateType[dat$Margin16 > 5] <- "Solid Rep"
dat$StateType[dat$Margin16  < -5] <- "Solid Dem"
dat$StateType[abs(dat$Margin16) <= 5] <- "Competitive"
dat$StateType <- as.factor(dat$StateType)
dat$StateType <- relevel(dat$StateType, "Solid Dem")
dat$SampleSize <- as.numeric(dat$SampleSize)
dat$MoE <- as.numeric(dat$MoE)
# Calculate Margin of Error based on sample size if missing
# Many polls failed to report a margin of error -- if so use a sample-size based calculation
dat$MoE2 <- dat$MoE
dat$moe <- 100*sqrt(.25/dat$SampleSize)*1.96
dat$MoE2[is.na(dat$MoE)*seq(1:nrow(dat))] <- dat$moe[is.na(dat$MoE)*seq(1:nrow(dat))]
# % Response other than Biden/Trump in the presidential horse race
dat$DK <- 100 - dat$Biden - dat$Trump
mean(dat$DK, na.rm = TRUE)
# Create measures of polling error
###############################################################################
# Signed Error: Certified Vote
dat$SignedError <- (dat$Biden - dat$Trump) - (dat$DemCertVote - dat$RepCertVote)
# Absolute Error: Certified Vote
dat$AbsError <-  abs(dat$SignedError)
# Partisan/Candidate-specific Error
dat$RepError <- dat$Trump - dat$RepCertVote
dat$DemError <- dat$Biden - dat$DemCertVote
# Two-Candidate Errors (removing those who choose response other than Biden or Trump from denominator)
dat$BidenTrump <- dat$Biden + dat$Trump
dat$BidenNorm <- 100*(dat$Biden / dat$BidenTrump)
dat$TrumpNorm <- 100*(dat$Trump / dat$BidenTrump)
dat$SignedErrorNorm <- (dat$BidenNorm - dat$TrumpNorm) - (dat$DemCertVote - dat$RepCertVote)
dat$AbsErrorNorm <- abs(dat$SignedErrorNorm)
dat$RepNormError <- dat$TrumpNorm - dat$RepCertVote
dat$DemNormError <- dat$BidenNorm - dat$DemCertVote
# Percent Correctly Predicted
# Also have poll.predicted in Excel that does same calculation
dat$BidenWinPoll <- as.logical(dat$Biden > dat$Trump)
dat$PollWin <- NA
dat$PollWin[dat$Biden > dat$Trump] <- "Dem"
dat$PollWin[dat$Biden < dat$Trump] <- "Rep"
dat$PollWin[dat$Biden == dat$Trump] <- "Tie"
dat$CorrectWinner <- as.logical(dat$PollWin == dat$Winner)
dat$AbsPollMargin <- abs(dat$Biden - dat$Trump)
# Just getting counts of various
nrow(dat)
length(table(dat$Conducted))
nrow(dat[dat$StateType == "Competitive",])
length(table(dat$Conducted[dat$StateType == "Competitive"]))
